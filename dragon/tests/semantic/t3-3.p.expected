; vim: ft=nasm
extern write_integer@
extern write_newline@
SECTION .bss
display@: db 8
SECTION .text
global main
main:
mov rbp, rsp
;
sub rsp, 8
lea rbx, [rbp+0]
push rbx
call read_integer@
add rsp, 8
lea rbx, [rbp+0]
mov rbx, [rbx]
mov rcx, 10
cmp rbx, rcx
setl cl
movzx rbx, cl
cmp rbx, 1
jne .L0
lea rbx, [rbp+0]
mov rbx, [rbx]
mov rcx, 10
cmp rbx, rcx
setge cl
movzx rbx, cl
cmp rbx, 1
jne .L2
lea rbx, [rbp+0]
mov rcx, 1
mov [rbx], rcx
jmp .L3
.L2:
lea rbx, [rbp+0]
mov rcx, 0
mov [rbx], rcx
.L3:
jmp .L1
.L0:
.L1:
lea rbx, [rbp+0]
mov rbx, [rbx]
push rbx
call write_integer@
add rsp, 8
; and we're done!
mov rax, 60
xor rdi, rdi
syscall
